# NOTE: This file is auto generated by OpenAPI Generator 7.5.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule Fera.Model.Product do
  @moduledoc """
  
  """

  @derive Jason.Encoder
  defstruct [
    :id,
    :external_id,
    :name,
    :url,
    :handle,
    :thumbnail_url,
    :rating,
    :counts,
    :is_visible,
    :tags,
    :stock,
    :type,
    :sku,
    :image_url,
    :in_stock,
    :global_id,
    :upc,
    :gtin,
    :mpn,
    :barcode,
    :brand,
    :status,
    :external_created_at,
    :price,
    :created_at,
    :updated_at,
    :media
  ]

  @type t :: %__MODULE__{
    :id => String.t | nil,
    :external_id => String.t | nil,
    :name => String.t | nil,
    :url => String.t | nil,
    :handle => String.t | nil,
    :thumbnail_url => String.t | nil,
    :rating => Fera.Model.ProductRating.t | nil,
    :counts => Fera.Model.ProductCounts.t | nil,
    :is_visible => boolean() | nil,
    :tags => [String.t] | nil,
    :stock => float() | nil,
    :type => String.t | nil,
    :sku => String.t | nil,
    :image_url => String.t | nil,
    :in_stock => boolean() | nil,
    :global_id => String.t | nil,
    :upc => String.t | nil,
    :gtin => String.t | nil,
    :mpn => String.t | nil,
    :barcode => String.t | nil,
    :brand => String.t | nil,
    :status => String.t | nil,
    :external_created_at => DateTime.t | nil,
    :price => float() | nil,
    :created_at => DateTime.t | nil,
    :updated_at => DateTime.t | nil,
    :media => [Fera.Model.MediaWithoutNesting.t] | nil
  }

  alias Fera.Deserializer

  def decode(value) do
    value
     |> Deserializer.deserialize(:rating, :struct, Fera.Model.ProductRating)
     |> Deserializer.deserialize(:counts, :struct, Fera.Model.ProductCounts)
     |> Deserializer.deserialize(:external_created_at, :datetime, nil)
     |> Deserializer.deserialize(:created_at, :datetime, nil)
     |> Deserializer.deserialize(:updated_at, :datetime, nil)
     |> Deserializer.deserialize(:media, :list, Fera.Model.MediaWithoutNesting)
  end
end

