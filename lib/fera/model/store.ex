# NOTE: This file is auto generated by OpenAPI Generator 7.5.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule Fera.Model.Store do
  @moduledoc """
  
  """

  @derive Jason.Encoder
  defstruct [
    :id,
    :name,
    :platform,
    :url,
    :code,
    :country_code,
    :country_name,
    :public_key,
    :external_id,
    :language,
    :supported_language,
    :logo_url,
    :icon_url,
    :counts,
    :rating,
    :is_dev_mode,
    :created_at,
    :updated_at,
    :pretty_url,
    :widgets,
    :users,
    :organization,
    :subscription,
    :plan
  ]

  @type t :: %__MODULE__{
    :id => String.t | nil,
    :name => String.t | nil,
    :platform => String.t | nil,
    :url => String.t | nil,
    :code => String.t | nil,
    :country_code => String.t | nil,
    :country_name => String.t | nil,
    :public_key => String.t | nil,
    :external_id => String.t | nil,
    :language => String.t | nil,
    :supported_language => String.t | nil,
    :logo_url => String.t | nil,
    :icon_url => String.t | nil,
    :counts => Fera.Model.StoreCounts.t | nil,
    :rating => Fera.Model.StoreRating.t | nil,
    :is_dev_mode => boolean() | nil,
    :created_at => DateTime.t | nil,
    :updated_at => DateTime.t | nil,
    :pretty_url => String.t | nil,
    :widgets => [Fera.Model.WidgetWithoutNesting.t] | nil,
    :users => [Fera.Model.UserWithoutNesting.t] | nil,
    :organization => Fera.Model.OrganizationWithoutNesting.t | nil,
    :subscription => Fera.Model.SubscriptionWithoutNesting.t | nil,
    :plan => Fera.Model.PlanWithoutNesting.t | nil
  }

  alias Fera.Deserializer

  def decode(value) do
    value
     |> Deserializer.deserialize(:counts, :struct, Fera.Model.StoreCounts)
     |> Deserializer.deserialize(:rating, :struct, Fera.Model.StoreRating)
     |> Deserializer.deserialize(:created_at, :datetime, nil)
     |> Deserializer.deserialize(:updated_at, :datetime, nil)
     |> Deserializer.deserialize(:widgets, :list, Fera.Model.WidgetWithoutNesting)
     |> Deserializer.deserialize(:users, :list, Fera.Model.UserWithoutNesting)
     |> Deserializer.deserialize(:organization, :struct, Fera.Model.OrganizationWithoutNesting)
     |> Deserializer.deserialize(:subscription, :struct, Fera.Model.SubscriptionWithoutNesting)
     |> Deserializer.deserialize(:plan, :struct, Fera.Model.PlanWithoutNesting)
  end
end

